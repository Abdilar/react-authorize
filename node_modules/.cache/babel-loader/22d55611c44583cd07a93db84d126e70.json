{"ast":null,"code":"import PropTypes from 'prop-types';\n\nvar hasPermission = function hasPermission(permissions, check) {\n  if (Array.isArray(permissions) && permissions.length) {\n    if (Array.isArray(check)) {\n      return check.every(function (check) {\n        return permissions.some(function (permission) {\n          return permission === check;\n        });\n      });\n    } else {\n      return check === \"\" || permissions.some(function (permission) {\n        return permission === check;\n      });\n    }\n  }\n\n  return false;\n};\n\nfunction isEmptyString(data) {\n  return !(isString(data) ? data : false);\n}\n\nfunction isString(data) {\n  return typeof data === 'string';\n}\n\nvar DEFAULT_PROPS = {\n  check: '',\n  localStorageKey: '',\n  permissions: []\n};\nvar PROP_TYPES = {\n  check: PropTypes.any,\n  children: PropTypes.element,\n  localStorageKey: PropTypes.string,\n  permissions: PropTypes.array\n};\n\nvar Authorize = function Authorize(_ref) {\n  var check = _ref.check,\n      children = _ref.children,\n      localStorageKey = _ref.localStorageKey,\n      permissions = _ref.permissions;\n  var per = isEmptyString(localStorageKey) ? permissions : localStorage.getItem(localStorageKey);\n  return check ? hasPermission(per, check) ? children : null : children;\n};\n\nAuthorize.defaultProps = DEFAULT_PROPS;\nAuthorize.propTypes = PROP_TYPES;\nexport default Authorize;","map":{"version":3,"mappings":";;AAAO,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,WAAD,EAAcC,KAAd,EAAwB;AACnD,MAAIC,KAAK,CAACC,OAAND,CAAcF,WAAdE,KAA8BF,WAAW,CAACI,MAA9C,EAAsD;AACpD,QAAIF,KAAK,CAACC,OAAND,CAAcD,KAAdC,CAAJ,EAA0B;AACxB,aAAOD,KAAK,CAACI,KAANJ,CAAYA,eAAK;AAAA,eAAID,WAAW,CAACM,IAAZN,CAAiBO,oBAAU;AAAA,iBAAIA,UAAU,KAAKN,KAAnB;AAAA,SAA3BD,CAAJ;AAAA,OAAjBC,CAAP;AADF,WAEO;AACL,aAAQA,KAAK,KAAK,EAAVA,IAAgBD,WAAW,CAACM,IAAZN,CAAiBO,oBAAU;AAAA,eAAIA,UAAU,KAAKN,KAAnB;AAAA,OAA3BD,CAAxB;AACD;AACF;;AACD,SAAO,KAAP;AARK;;AAWA,SAASQ,aAAT,CAAuBC,IAAvB,EAA6B;AAClC,SAAO,EAAEC,QAAQ,CAACD,IAAD,CAARC,GAAiBD,IAAjBC,GAAwB,KAA1B,CAAP;AACD;;AAEM,SAASA,QAAT,CAAkBD,IAAlB,EAAwB;AAC7B,SAAO,OAAOA,IAAP,KAAgB,QAAvB;AACD;;ACfM,IAAME,aAAa,GAAG;AAC3BV,OAAK,EAAE,EADoB;AAE3BW,iBAAe,EAAE,EAFU;AAG3BZ,aAAW,EAAE;AAHc,CAAtB;AAMP,IAAaa,UAAU,GAAG;AACxBZ,OAAK,EAAEa,SAAS,CAACC,GADO;AAExBC,UAAQ,EAAEF,SAAS,CAACG,OAFI;AAGxBL,iBAAe,EAAEE,SAAS,CAACI,MAHH;AAIxBlB,aAAW,EAAEc,SAAS,CAACK;AAJC,CAA1B;;ICLMC,SAAS,GAAG,SAAZA,SAAY,OAAqD;AAAA,MAAnDnB,KAAmD,QAAnDA,KAAmD;AAAA,MAA5Ce,QAA4C,QAA5CA,QAA4C;AAAA,MAAlCJ,eAAkC,QAAlCA,eAAkC;AAAA,MAAjBZ,WAAiB,QAAjBA,WAAiB;AACrE,MAAMqB,GAAG,GAAGb,aAAa,CAACI,eAAD,CAAbJ,GAAiCR,WAAjCQ,GAA+Cc,YAAY,CAACC,OAAbD,CAAqBV,eAArBU,CAA3D;AACA,SACErB,KAAK,GAAIF,aAAa,CAACsB,GAAD,EAAMpB,KAAN,CAAbF,GAA4BiB,QAA5BjB,GAAuC,IAA3C,GAAmDiB,QAD1D;AAFF;;AAOAI,SAAS,CAACI,YAAVJ,GAAyBT,aAAzBS;AACAA,SAAS,CAACK,SAAVL,GAAsBP,UAAtBO","names":["hasPermission","permissions","check","Array","isArray","length","every","some","permission","isEmptyString","data","isString","DEFAULT_PROPS","localStorageKey","PROP_TYPES","PropTypes","any","children","element","string","array","Authorize","per","localStorage","getItem","defaultProps","propTypes"],"sources":["../src/utils/functions.js","../src/components/Authorize/Authorize.config.js","../src/components/Authorize/Authorize.component.js"],"sourcesContent":["export const hasPermission = (permissions, check) => {\n  if (Array.isArray(permissions) && permissions.length) {\n    if (Array.isArray(check)) {\n      return check.every(check => permissions.some(permission => permission === check))\n    } else {\n      return (check === \"\" || permissions.some(permission => permission === check));\n    }\n  }\n  return false;\n};\n\nexport function isEmptyString(data) {\n  return !(isString(data) ? data : false);\n}\n\nexport function isString(data) {\n  return typeof data === 'string';\n}\n","import PropTypes from 'prop-types';\n\nexport const DEFAULT_PROPS = {\n  check: '',\n  localStorageKey: '',\n  permissions: []\n};\n\nexport const PROP_TYPES = {\n  check: PropTypes.any,\n  children: PropTypes.element,\n  localStorageKey: PropTypes.string,\n  permissions: PropTypes.array\n};\n","import {hasPermission, isEmptyString} from '../../utils/functions';\nimport {DEFAULT_PROPS, PROP_TYPES} from './Authorize.config';\n\nconst Authorize = ({check, children, localStorageKey, permissions}) => {\n  const per = isEmptyString(localStorageKey) ? permissions : localStorage.getItem(localStorageKey);\n  return (\n    check ? (hasPermission(per, check) ? children : null) : children\n  );\n};\n\nAuthorize.defaultProps = DEFAULT_PROPS;\nAuthorize.propTypes = PROP_TYPES;\n\nexport {Authorize};\n"]},"metadata":{},"sourceType":"module"}